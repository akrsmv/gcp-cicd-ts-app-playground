name: WEB build&Deploy To GCP
# https://github.com/google-github-actions/setup-gcloud
on:
  push:
    branches:
      - dev
    paths:
      - '.docker/images/web/**/*'
      - 'packages/web/**/*.ts'
      - 'packages/web/**/*.tsx'
      - 'packages/web/**/*.json'
      - '.github/workflows/wf-gctappweb-dev.yml'

env:
  PROJECT_ID: toki-take-home-2023
  RUN_REGION: europe-west3
  IMAGE_NAME: gctapp/web
  SERVICE_NAME: gctapp-web
  PORT: 8080

jobs:
  # build:
  #   name: Build React App
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout Repo
  #       uses: actions/checkout@main

  #     - name: Setup Node.js (NPM)
  #       uses: actions/setup-node@master
  #       with:
  #         node-version: '18.x'

  #     - name: Use cached node_modules
  #       uses: actions/cache@master
  #       with:
  #         path: node_modules
  #         key: nodeModules-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           nodeModules-
  #     - name: Install dependencies
  #       run: npm install
  #       env:
  #         CI: true

  #     - name: Build Development
  #       run: npm run build -w @gctapp/web

  #     - name: Archive Production Artifact
  #       uses: actions/upload-artifact@main
  #       with:
  #         name: build
  #         path: packages/web/build

  deploy-gcr:
    name: Deploy to GCR
    # needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@main

      # - name: Download Artifact
      #   uses: actions/download-artifact@main
      #   with:
      #     name: build
      #     path: packages/web/build

      - name: Setup GCloud Auth
        id: auth
        uses: google-github-actions/auth@v0.4.0
        with:
          credentials_json: ${{ secrets.GCR_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.1

      # Build and push image to Google Container Registry
      - name: Build & Push
      
      #using gcloud cli directly
      #   run: |-
      #     gcloud builds submit \
      #       --quiet \
      #       --config ".github/cb-gctappweb-dev.yaml"
      #       --substitutions="_PROJECT_ID=$PROJECT_ID,_IMAGE_NAME=$IMAGE_NAME,_SERVICE_NAME=$SERVICE_NAME,_GITHUB_SHA=$GITHUB_SHA"
      #   working-directory: .
      #   env:
      #     PROJECT_ID: toki-take-home-2023
      #     RUN_REGION: europe-west3
      #     IMAGE_NAME: gctapp/web
      #     SERVICE_NAME: gctapp-web

      #using kaniko
        # since not using gcloudd cli here, kaniko needs credentials 
        #
        # 1) passing -e GOOGLE_APPLICATION_CREDENTIALS=/kaniko/config.json
        # 2) and also mounting the credentials into this path /kaniko/config.json

        # We could omit 1) and only mount credentials into this path, since it is the default
        # For clarity we do both 1) and 2)

        # TODO how we proceed? Are we buiding inside docker or we stick with building above, then uploading artifact then, donloading it and using it
        # Which is faster: caching node_modules like above, or caching via kaniko?
        # TODO test them both
        run: |-
          docker run \
          -e GOOGLE_APPLICATION_CREDENTIALS=/kaniko/config.json \
          -v $GOOGLE_APPLICATION_CREDENTIALS:/kaniko/config.json \
          -v ${PWD}:/workspace \
          gcr.io/kaniko-project/executor:latest \
          --dockerfile /workspace/.docker/images/web/Dockerfile \
          --destination "gcr.io/$PROJECT_ID/$IMAGE_NAME:$GITHUB_SHA" \
          --context dir:///workspace/ \
          --build-arg "REACT_APP_GCT_ENV=DEV"
        working-directory: .
        
      # Deploy image to Cloud Run
      - name: Deploy GCR
        run: |-
          gcloud run deploy "$SERVICE_NAME" \
            --image "gcr.io/$PROJECT_ID/$IMAGE_NAME:$GITHUB_SHA" \
            --max-instances=1 \
            --platform managed \
            --region $RUN_REGION \
            --allow-unauthenticated \
            --port=$PORT